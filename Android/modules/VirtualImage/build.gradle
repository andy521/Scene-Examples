apply from: "${rootProject.projectDir}/modular.gradle"

def safeExtGetVersion(prop, key, fallback) {
    if (rootProject.ext.has(prop)) {
        def map = rootProject.ext.get(prop)
        if (map.containsKey(key)) {
            return map.get(key)
        }
    }
    return fallback
}

def safeExtGetDependence(key, fallback){
    return "$key:${safeExtGetVersion('dependencies', key, fallback)}"
}

android {
    compileSdkVersion safeExtGetVersion('android', 'compileSdkVersion', 31)
    buildToolsVersion safeExtGetVersion('android', 'buildToolsVersion', '30.0.3')
    resourcePrefix ""


    defaultConfig {
        if (isRunAlone.toBoolean()) {
            applicationId "io.agora.scene.virtualimage"
        }
        minSdkVersion safeExtGetVersion('android', 'minSdkVersion', 21)
        targetSdkVersion safeExtGetVersion('android', 'targetSdkVersion', 31)
        versionCode 1
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding = true
    }

    if (isRunAlone.toBoolean()) {
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "VirtualImage-RTC-${versionName}.apk"
            }
        }
    }

    sourceSets {
        main {
            java.srcDirs += [
                    "src/main/java",
                    "src/main/fu_java"
            ]
            res.srcDirs += [
                    "src/main/res",
                    "src/main/fu_res",
                    "src/main/fu_res_icon"
            ]
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation safeExtGetDependence('junit:junit','4.+')
    androidTestImplementation safeExtGetDependence('androidx.test.ext:junit','1.1.2')
    androidTestImplementation safeExtGetDependence('androidx.test.espresso:espresso-core','3.3.0')

    implementation safeExtGetDependence('androidx.appcompat:appcompat', '1.2.0')
    implementation safeExtGetDependence('androidx.recyclerview:recyclerview', '1.2.1')
    implementation safeExtGetDependence('androidx.work:work-runtime','2.7.0')

    //implementation safeExtGetDependence('com.github.agorabuilder:agora-full-preview','4.0.0.preview.3')
    implementation safeExtGetDependence('com.github.AgoraIO-Community:SyncManager-Android', '1.0.0')

    // Google
    implementation("androidx.navigation:navigation-fragment:2.3.5")
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Third Part
    implementation("com.squareup.retrofit2:retrofit:2.9.0")

    // FU libs
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'com.squareup.okio:okio:2.2.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.github.microshow:RxFFmpeg:2.1.0'
    implementation(name: 'FUTtsEngine', ext: 'aar')

    implementation project(':libs:ui-widget')
    implementation project(':libs:base-library')
}